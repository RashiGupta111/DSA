class Solution {
  public:
    vector<int> minAnd2ndMin(vector<int> &arr) {
        // code here
        int n=arr.size();
        
        sort(arr.begin(),arr.end());
        
        vector<int> ans;
        
        if(n==1){
            ans.push_back(-1);
            return ans;
        }
        
        int i=1;
        ans.push_back(arr[0]);
        
        while(i<n){
            
            
            if(arr[i]!=arr[i-1]){
                ans.push_back(arr[i]);
                return ans;
            }
            else{
                i++;
            }
            
        }
        
        if(ans.size()==1){
          ans.pop_back();
          ans.push_back(-1);
          return ans;
        }
    }
};




================================================================================================


class Solution {
  public:
    vector<int> minAnd2ndMin(vector<int> &arr) {
        // code here
        int n=arr.size();
        
        int min=INT_MAX;
        int secmin=INT_MAX;
        
        for(int i=0; i<n; i++){
            if(arr[i]<min){
                min=arr[i];
            }
        }
        
        for(int i=0; i<n; i++){
            if(arr[i]<secmin && arr[i]>min){
                secmin=arr[i];
            }
        }
        
        if(secmin==INT_MAX){
            return {-1};
        }
        
        return {min, secmin};
    }
};



========================================================================================================





class Solution {
  public:
    vector<int> minAnd2ndMin(vector<int> &arr) {
        // code here
        int n=arr.size();
        
        int min=INT_MAX , secmin=INT_MAX;
        
        for(int i=0; i<n; i++){
            if(arr[i]<min){
                secmin=min;
                min=arr[i];
            }
            
            else if(arr[i]>min && arr[i]<secmin){
                secmin=arr[i];
            }
            
        }
        if(secmin==INT_MAX)
              return{-1};
              
        return {min, secmin};
    }
};


